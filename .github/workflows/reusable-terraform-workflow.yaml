---
  name: reusable terraform workflow 
  
  on:
    workflow_call:
      inputs:
        path:
          required: true
          type: string
        environment:
          required: true
          type: string
     
  permissions:
    id-token: write # This is required for requesting the JWT
    contents: read  # This is required for actions/checkout
    
  jobs:
    terraform:
      name: terraform 
      environment: ${{ inputs.environment }}
      runs-on: ubuntu-latest
      concurrency:
        group: ${{ inputs.path }}
      env:
        working-directory: ${{ inputs.path }}
        TF_WORKSPACE: default 
        TF_VAR_fsx_admin_password: ${{ secrets.FSX_ADMIN_PASSWORD }}
        TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        TF_VAR_master_user_password: ${{ secrets.OPENSEARSHPASSWORD }}
      steps:
        - name: Check out code
          uses: actions/checkout@v3
          
        - uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.5.0 

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: ${{ vars.ACCESS_ROLE_NAME }} 
            aws-region: ap-southeast-1

        - name: Terraform fmt
          id: fmt
          run: terraform fmt -check
          continue-on-error: true

        - name: Terraform init
          id: init
          run: |
            git config --local --remove-section http."https://github.com/"
            git config --global url."https://terraform:${GH_TOKEN}@github.com/zhouwen-oganization-test".insteadOf "https://github.com/zhouwen-oganization-test"
            terraform init
          env:
              GH_TOKEN: ${{ secrets.GH_TOKEN }}
          working-directory: ${{ env.working-directory }}
  
        - name: Terraform validate
          id: validate
          run: terraform validate

        - name: Terraform plan
          id: plan
          run: terraform plan -out tfplan
          working-directory: ${{ env.working-directory }}

        - name: Terraform show
          id: show
          if: github.event_name == 'pull_request'
          run: terraform show -no-color tfplan
          working-directory: ${{ env.working-directory }}
  
        - name: Plan output
          id: output
          uses: actions/github-script@v4
          if: github.event_name == 'pull_request'
          env:
            PLAN: "terraform\n${{ steps.show.outputs.stdout }}"
          with:
            github-token: ${{ secrets.GH_TOKEN }}
            script: |
              const output = `#### Terraform working directory üè†: \`${{ env.working-directory }}\`
              #### Terraform Format and Style üñå: \`${{ steps.fmt.outcome }}\`
              #### Terraform Initialization ‚öôÔ∏è: \`${{ steps.init.outcome }}\`
              #### Terraform Plan üìñ: \`${{ steps.plan.outcome }}\`
              <details><summary>Show Plan</summary>
  
              \`\`\`hcl
              ${process.env.PLAN}
              \`\`\`
  
              </details>
  
              **Pusher**: @${{ github.actor }}
              **Action**: ${{ github.event_name }}
              `;
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })

        - name: Terraform apply
          id: apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve tfplan
          working-directory: ${{ env.working-directory }}
