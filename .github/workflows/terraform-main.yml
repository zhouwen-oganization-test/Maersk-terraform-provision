---
  name: "Terraform GitHub Actions Demo"
  
  "on":
    pull_request:
    push: { branches: [main] }
  permissions:
    id-token: write # This is required for requesting the JWT
    contents: read  # This is required for actions/checkout
    
  
  jobs:
    check:
      name: Check changed files
      env:
        workspaces: |
          - staging/account-staging-a/service-staging-a
          - staging/account-staging-a/service-staging-b
          - staging/account-staging-b/service-staging-c
          - staging/account-staging-b/service-staging-d
      outputs:
        run_job: ${{ steps.check_files.outputs.run_job }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
          with:
            fetch-depth: 2
        - name: check files
          id: check_files
          run: |
            echo "=============== list changed files ==============="
            git diff --name-only HEAD^ HEAD
            echo "========== check paths of changed files =========="
            git diff --name-only HEAD^ HEAD > files.txt
            echo "${{env.workspaces}}"
            while IFS= read -r file
            do
              echo $file
              for ws in ${{env.workspaces}}
              do
                if [[ $file != "$ws/"* ]]; then
                  echo "This file is not under the directory $ws."
                else
                  echo "run_job.$ws=true" >> $GITHUB_OUTPUT
                  break
                fi
              done
            done < files.txt

    debug:
      name: Check files output
      needs: check
      runs-on: ubuntu-latest
      steps:
        - name: echo output
          id: echo
          run: |
            echo "${{needs.check.outputs.run_job}}"

    terraform:
      name: Terraform deploy
      needs: check
      if: needs.check.outputs.run_job != 'false'
      runs-on: ubuntu-latest
      env:
        working-directory: ${{needs.check.outputs.run_job}}
        TF_WORKSPACE: my-workspace 
      steps:
        - name: Check out code
          uses: actions/checkout@v2
          
        - uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.5.0 

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::129980683758:role/Github-runner-access-role
            aws-region: ap-southeast-1

        - name: Terraform Fmt
          id: fmt
          run: terraform fmt -check
          continue-on-error: true
  
        - name: Terraform init
          id: init
          run: terraform init
          working-directory: ${{ env.working-directory }}
  
        - name: Terraform validate
          id: validate
          run: terraform validate
  
        - name: Terraform plan
          id: plan
          run: terraform plan -no-color
          working-directory: ${{ env.working-directory }}
  
        - name: Plan output
          id: output
          uses: actions/github-script@v3
          if: github.event_name == 'pull_request'
          env:
            PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
              ### Workspace
  
              \`${process.env.TF_WORKSPACE}\`
  
              #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
              #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
              <details><summary>Show Plan</summary>
  
              \`\`\`hcl
              ${process.env.PLAN}
              \`\`\`
  
              </details>
  
              **Pusher**: @${{ github.actor }}
              **Action**: ${{ github.event_name }}
              `;
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
  
        - name: Terraform apply
          id: apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false
          working-directory: ${{ env.working-directory }}